"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _object = _interopRequireDefault(require("object.assign"));

require("react");

var _isNil = _interopRequireDefault(require("@antv/util/lib/is-nil"));

var _get2 = _interopRequireDefault(require("@antv/util/lib/get"));

var _set = _interopRequireDefault(require("@antv/util/lib/set"));

var _isObject = _interopRequireDefault(require("@antv/util/lib/is-object"));

var _radar = require("@antv/g2plot/lib/plots/radar");

var _createPlot = _interopRequireDefault(require("../createPlot"));

var _polyfill = require("./core/polyfill");

var _util = require("@antv/util");

var REPLACEAPILIST = [{
  sourceKey: 'angleField',
  targetKey: 'xField',
  notice: 'angleField 是 g2@1.0的属性，即将废弃，请使用xField替代'
}, {
  sourceKey: 'radiusField',
  targetKey: 'yField',
  notice: 'radiusField 是 g2@1.0的属性，即将废弃，请使用yFeild替代'
}, {
  sourceKey: 'angleAxis',
  targetKey: 'xAxis',
  notice: 'angleAxis 是 g2@1.0的属性，即将废弃，请使用xAxis替代'
}, {
  sourceKey: 'radiusAxis',
  targetKey: 'yAxis',
  notice: 'radiusAxis 是 g2@1.0的属性，即将废弃，请使用yAxis替代'
}];

var getVisibleStyle = function getVisibleStyle(visible) {
  if ((0, _isNil["default"])(visible) || visible) {
    // // null,undefined : 要展示    visible为true: 要展示
    return {
      fillOpacity: 1,
      strokeOpacity: 1
    };
  } // 不显示


  return {
    fillOpacity: 0,
    strokeOpacity: 0
  };
}; // 将bizcharts.plots的radaChart的Line的API 替换成G2.plots的API替换成LineStyle


var replaceLineWithLinestyle = function replaceLineWithLinestyle(options) {
  var _get = (0, _get2["default"])(options, 'line', {}),
      visible = _get.visible,
      size = _get.size,
      style = _get.style;

  (0, _set["default"])(options, 'lineStyle', (0, _object["default"])((0, _object["default"])((0, _object["default"])({}, style), {
    opacity: 1,
    lineWidth: typeof size === 'number' ? size : 2
  }), getVisibleStyle(visible)));
};

var polyfill = function polyfill(opt) {
  // 先转为统一的，在统一polyfill
  (0, _polyfill.replaceApi)(REPLACEAPILIST, opt);
  var options = (0, _polyfill.polyfillOptions)(opt);

  if ((0, _get2["default"])(options, 'area.visible') === false) {
    (0, _set["default"])(options, 'area', false);
  }

  if ((0, _get2["default"])(options, 'point.visible') === false) {
    (0, _set["default"])(options, 'point', false);
  }

  replaceLineWithLinestyle(options);

  if ((0, _isObject["default"])(options.angleAxis) || (0, _isObject["default"])(options.radiusAxis)) {
    // 旧版用法就默认关闭此line
    if (!options.angleAxis) {
      options.angleAxis = {};
    }

    options.angleAxis.line = (0, _get2["default"])(options, 'angleAxis.line', null);
    options.angleAxis.tickLine = (0, _get2["default"])(options, 'angleAxis.tickLine', null);
  }

  if ((0, _get2["default"])(options, 'tooltip.visible') === false) {
    (0, _set["default"])(options, 'tooltip', false);
  }

  if ((0, _get2["default"])(options, 'label.visible') === false) {
    (0, _set["default"])(options, 'label', false);
  }

  if ((0, _get2["default"])(options, 'yAxis.grid.line.type') === 'line') {
    (0, _util.deepMix)(options, {
      xAxis: {
        line: null,
        tickLine: null
      }
    }, options);
  }

  return options;
};

var _default2 = (0, _createPlot["default"])(_radar.Radar, 'RadarChart', polyfill);

exports["default"] = _default2;