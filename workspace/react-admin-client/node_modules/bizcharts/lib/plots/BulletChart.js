"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

require("react");

var _bullet = require("@antv/g2plot/lib/plots/bullet");

var _warning = _interopRequireDefault(require("warning"));

var _get = _interopRequireDefault(require("@antv/util/lib/get"));

var _set = _interopRequireDefault(require("@antv/util/lib/set"));

var _createPlot = _interopRequireDefault(require("../createPlot"));

var _isNil = _interopRequireDefault(require("@antv/util/lib/is-nil"));

var _isArray = _interopRequireDefault(require("@antv/util/lib/is-array"));

var _polyfill = require("./core/polyfill");

var polyfill = function polyfill(opt) {
  var options = (0, _polyfill.polyfillOptions)(opt); // size

  if (!(0, _isNil["default"])((0, _get["default"])(opt, 'measureSize'))) {
    (0, _warning["default"])(false, 'measureSize已废弃，请使用size.measure替代');
    (0, _set["default"])(options, 'size.measure', (0, _get["default"])(opt, 'measureSize'));
  }

  if (!(0, _isNil["default"])((0, _get["default"])(opt, 'rangeSize'))) {
    (0, _warning["default"])(false, 'rangeSize已废弃，请使用size.range替代');
    (0, _set["default"])(options, 'size.range', (0, _get["default"])(opt, 'rangeSize'));
  }

  if (!(0, _isNil["default"])((0, _get["default"])(opt, 'markerSize'))) {
    (0, _warning["default"])(false, 'markerSizee已废弃，请使用size.target替代');
    (0, _set["default"])(options, 'size.target', (0, _get["default"])(opt, 'markerSize'));
  } // color


  if (!(0, _isNil["default"])((0, _get["default"])(opt, 'measureColors'))) {
    (0, _warning["default"])(false, 'measureColors已废弃，请使用color.measure替代');
    (0, _set["default"])(options, 'color.measure', (0, _get["default"])(opt, 'measureColors'));
  }

  if (!(0, _isNil["default"])((0, _get["default"])(opt, 'rangeColors'))) {
    (0, _warning["default"])(false, 'rangeColors已废弃，请使用color.range替代');
    (0, _set["default"])(options, 'color.range', (0, _get["default"])(opt, 'rangeColors'));
  }

  if (!(0, _isNil["default"])((0, _get["default"])(opt, 'markerColors'))) {
    (0, _warning["default"])(false, 'markerColors已废弃，请使用color.target替代');
    (0, _set["default"])(options, 'color.target', (0, _get["default"])(opt, 'markerColors'));
  } // bulletStyle


  if (!(0, _isNil["default"])((0, _get["default"])(opt, 'markerStyle'))) {
    (0, _warning["default"])(false, 'markerStyle已废弃，请使用bulletStyle.target替代');
    (0, _set["default"])(options, 'bulletStyle.target', (0, _get["default"])(opt, 'markerStyle'));
  }

  if ((0, _isNil["default"])((0, _get["default"])(opt, 'xAxis.line'))) {
    // 默认不显示轴线
    (0, _set["default"])(options, 'xAxis.line', false);
  }

  if ((0, _isNil["default"])((0, _get["default"])(opt, 'yAxis'))) {
    // 默认不显示y轴
    (0, _set["default"])(options, 'yAxis', false);
  }

  if ((0, _isNil["default"])((0, _get["default"])(opt, 'measureField'))) {
    // 默认measureField
    (0, _set["default"])(options, 'measureField', 'measures');
  }

  if ((0, _isNil["default"])((0, _get["default"])(opt, 'rangeField'))) {
    // 默认rangeField
    (0, _set["default"])(options, 'rangeField', 'ranges');
  }

  if ((0, _isNil["default"])((0, _get["default"])(opt, 'targetField'))) {
    // 默认targetField
    (0, _set["default"])(options, 'targetField', 'target');
  } // polyfill


  if ((0, _isArray["default"])((0, _get["default"])(opt, 'data.0.targets'))) {
    // 兼容旧版数据格式
    (0, _set["default"])(options, 'data.0.target', (0, _get["default"])(opt, 'data.0.targets')[0]);
  }

  if (!(0, _isNil["default"])((0, _get["default"])(opt, 'rangeMax'))) {
    (0, _warning["default"])(false, '该属性已废弃，请在数据中配置range，并配置rangeField');
    (0, _set["default"])(options, 'data.0.ranges', [(0, _get["default"])(opt, 'rangeMax')]);
  }

  return options;
}; // 子弹图


var _default = (0, _createPlot["default"])(_bullet.Bullet, 'BulletChart', polyfill);

exports["default"] = _default;