{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaoHu\\\\Desktop\\\\\\u524D\\u7AEF\\\\workspace\\\\react-admin-client\\\\src\\\\containers\\\\Home\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { Card, DatePicker, message } from 'antd';\nimport moment from 'moment';\nimport ReactEcharts from 'echarts-for-react';\nimport './Home.less';\nimport { getGiStatistics, getDoStatistics } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getGiChart = async () => {\n      let response = await getGiStatistics();\n\n      if (response.code === 0) {\n        let gistatistics = response.data.gistatistics;\n        let giTotal = response.data.giTotal;\n        this.setState({\n          gistatistics,\n          giTotal\n        });\n      } else {\n        message.error(response.msg);\n      }\n    };\n\n    this.getDoChart = async () => {\n      let response = await getDoStatistics();\n\n      if (response.code === 0) {\n        let dostatistics = response.data.dostatistics;\n        let doTotal = response.data.doTotal;\n        this.setState({\n          dostatistics,\n          doTotal\n        });\n      } else {\n        message.error(response.msg);\n      }\n    };\n\n    this.getOptionForGrantTotal = () => {\n      var option = {\n        title: {\n          text: 'Grant Total'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['Global-Int', 'Domestic']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'Global-Int',\n          type: 'line',\n          stack: 'Total',\n          data: this.state.gistatistics\n        }, {\n          name: 'Domestic',\n          type: 'line',\n          stack: 'Total',\n          data: this.state.dostatistics\n        }]\n      };\n      this.setState({\n        requestTotal: {\n          gi: this.state.giTotal,\n          do: this.state.doTotal\n        }\n      });\n      return option;\n    };\n\n    this.state = {\n      requestTotal: {\n        gi: 0,\n        do: 0\n      }\n    };\n    this.state = {\n      dostatistics: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    };\n    this.state = {\n      gistatistics: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    };\n    this.getGiChart();\n    this.getDoChart();\n  }\n\n  // extra = (\n  //     <Space direction=\"vertical\" size={12}>\n  //     <RangePicker\n  //       defaultValue={[moment('2015/01/01', this.dateFormat), moment('2015/01/01', this.dateFormat)]}\n  //       format={this.dateFormat}\n  //     />\n  //   </Space>\n  // )\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grantTotal\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          title: \"Proxy Forms Request Total\",\n          style: {\n            width: 250\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Global-Int: \", this.state.giTotal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Domestic: \", this.state.doTotal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactEcharts, {\n          option: this.getOptionForGrantTotal()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/Home/Home.jsx"],"names":["React","Component","Card","DatePicker","message","moment","ReactEcharts","getGiStatistics","getDoStatistics","RangePicker","Home","constructor","props","getGiChart","response","code","gistatistics","data","giTotal","setState","error","msg","getDoChart","dostatistics","doTotal","getOptionForGrantTotal","option","title","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","series","name","stack","state","requestTotal","gi","do","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, DatePicker, message } from 'antd'\r\nimport moment from 'moment';\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport './Home.less'\r\nimport {getGiStatistics, getDoStatistics} from '../../api'\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {dostatistics:[0,0,0,0,0,0,0,0,0,0,0,0]} \r\n        this.state = {gistatistics:[0,0,0,0,0,0,0,0,0,0,0,0]} \r\n        this.getGiChart()  \r\n        this.getDoChart()\r\n    }\r\n\r\n    getGiChart = async () => {\r\n        let response = await getGiStatistics()\r\n        if(response.code === 0){\r\n            let gistatistics = response.data.gistatistics\r\n            let giTotal = response.data.giTotal\r\n            this.setState({gistatistics,giTotal})\r\n        }else{\r\n            message.error(response.msg)\r\n        }\r\n    }\r\n\r\n    getDoChart = async () => {\r\n        let response = await getDoStatistics()\r\n        if(response.code === 0){\r\n            let dostatistics = response.data.dostatistics\r\n            let doTotal = response.data.doTotal\r\n            this.setState({dostatistics,doTotal})\r\n        }else{\r\n            message.error(response.msg)\r\n        }\r\n    }\r\n\r\n    getOptionForGrantTotal = () => {\r\n        var option = {\r\n            title: {\r\n                text: 'Grant Total'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['Global-Int', 'Domestic']\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Global-Int',\r\n                    type: 'line',\r\n                    stack: 'Total',\r\n                    data: this.state.gistatistics\r\n                },\r\n                {\r\n                    name: 'Domestic',\r\n                    type: 'line',\r\n                    stack: 'Total',\r\n                    data: this.state.dostatistics\r\n                },\r\n            ]\r\n        };\r\n\r\n        this.setState({ requestTotal: { gi: this.state.giTotal, do: this.state.doTotal } })\r\n\r\n        return option;\r\n    }\r\n\r\n    \r\n    state = { requestTotal: { gi: 0, do: 0 } }\r\n\r\n    // extra = (\r\n    //     <Space direction=\"vertical\" size={12}>\r\n    //     <RangePicker\r\n    //       defaultValue={[moment('2015/01/01', this.dateFormat), moment('2015/01/01', this.dateFormat)]}\r\n    //       format={this.dateFormat}\r\n    //     />\r\n    //   </Space>\r\n    // )\r\n\r\n    render() {\r\n        return (\r\n            <div className='home'>\r\n                <div className=\"grantTotal\">\r\n                    <Card title='Proxy Forms Request Total' style={{ width: 250 }}>\r\n                        <p>Global-Int: {this.state.giTotal}</p>\r\n                        <p>Domestic: {this.state.doTotal}</p>\r\n                    </Card>\r\n                    <ReactEcharts option={this.getOptionForGrantTotal()} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}