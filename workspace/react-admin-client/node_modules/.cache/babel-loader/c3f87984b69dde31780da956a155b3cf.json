{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaoHu\\\\Desktop\\\\\\u524D\\u7AEF\\\\workspace\\\\react-admin-client\\\\src\\\\containers\\\\GIStatistics\\\\GIStatistics.jsx\";\nimport { Button } from 'antd';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Card, message } from 'antd';\nimport ReactEcharts from 'echarts-for-react';\nimport { getGiStatistics } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GIStatistics extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateChart = async () => {\n      let response = await getGiStatistics();\n\n      if (response.status === 0) {\n        let gistatics = response.gistatics;\n        console.log('gistatics', gistatics);\n        this.setState({\n          gistatics\n        });\n      } else {\n        message.error(response.msg);\n      }\n    };\n\n    this.getOption = () => {\n      var option = {\n        title: {\n          text: 'Global-Int Request Total'\n        },\n        tooltip: {},\n        legend: {\n          data: ['Total']\n        },\n        xAxis: {\n          data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n        },\n        yAxis: {},\n        series: [{\n          name: 'Total',\n          type: 'bar',\n          data: this.state.gistatics\n        }]\n      };\n      return option;\n    };\n\n    this.state = {\n      gistatics: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n    };\n    this.updateChart();\n  }\n\n  render() {\n    const title = 'Global International Request Statistics';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: this.updateChart,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        title: title,\n        children: /*#__PURE__*/_jsxDEV(ReactEcharts, {\n          option: this.getOption()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({}), {})(GIStatistics);","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/GIStatistics/GIStatistics.jsx"],"names":["Button","React","Component","connect","Card","message","ReactEcharts","getGiStatistics","GIStatistics","constructor","props","updateChart","response","status","gistatics","console","log","setState","error","msg","getOption","option","title","text","tooltip","legend","data","xAxis","yAxis","series","name","type","state","render"],"mappings":";AAAA,SAASA,MAAT,QAAuB,MAAvB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,EAAcC,OAAd,QAA4B,MAA5B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAAQC,eAAR,QAA8B,WAA9B;;;AAEA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AAEjCO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAMlBC,WANkB,GAMJ,YAAY;AACtB,UAAIC,QAAQ,GAAG,MAAML,eAAe,EAApC;;AACA,UAAGK,QAAQ,CAACC,MAAT,KAAoB,CAAvB,EAAyB;AACrB,YAAIC,SAAS,GAAGF,QAAQ,CAACE,SAAzB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,SAAxB;AACA,aAAKG,QAAL,CAAc;AAACH,UAAAA;AAAD,SAAd;AACH,OAJD,MAIK;AACDT,QAAAA,OAAO,CAACa,KAAR,CAAcN,QAAQ,CAACO,GAAvB;AACH;AACJ,KAfiB;;AAAA,SAiBlBC,SAjBkB,GAiBN,MAAM;AACd,UAAIC,MAAM,GAAG;AACTC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE;AADH,SADE;AAITC,QAAAA,OAAO,EAAE,EAJA;AAKTC,QAAAA,MAAM,EAAE;AACJC,UAAAA,IAAI,EAAC,CAAC,OAAD;AADD,SALC;AAQTC,QAAAA,KAAK,EAAE;AACHD,UAAAA,IAAI,EAAE,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,KAAzB,EAA+B,KAA/B,EAAqC,KAArC,EAA2C,KAA3C,EAAiD,KAAjD,EAAuD,KAAvD,EAA6D,KAA7D,EAAmE,KAAnE;AADH,SARE;AAWTE,QAAAA,KAAK,EAAE,EAXE;AAYTC,QAAAA,MAAM,EAAE,CAAC;AACLC,UAAAA,IAAI,EAAE,OADD;AAELC,UAAAA,IAAI,EAAE,KAFD;AAGLL,UAAAA,IAAI,EAAE,KAAKM,KAAL,CAAWlB;AAHZ,SAAD;AAZC,OAAb;AAmBA,aAAOO,MAAP;AACH,KAtCiB;;AAEd,SAAKW,KAAL,GAAa;AAAClB,MAAAA,SAAS,EAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,CAArB,EAAuB,CAAvB;AAAX,KAAb;AACA,SAAKH,WAAL;AACH;;AAmCDsB,EAAAA,MAAM,GAAG;AACL,UAAMX,KAAK,GAAG,yCAAd;AAEA,wBACI;AAAA,8BACI,QAAC,IAAD;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,OAAO,EAAE,KAAKX,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD;AAAM,QAAA,KAAK,EAAEW,KAAb;AAAA,+BACI,QAAC,YAAD;AAAc,UAAA,MAAM,EAAE,KAAKF,SAAL;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAtDgC;;AAyDrC,eAAejB,OAAO,CAClB6B,KAAK,KAAK,EAAL,CADa,EAElB,EAFkB,CAAP,CAGbxB,YAHa,CAAf","sourcesContent":["import { Button } from 'antd'\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {Card, message} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport {getGiStatistics} from '../../api'\r\n    \r\nclass GIStatistics extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {gistatics:[0,0,0,0,0,0,0,0,0,0,0,0]} \r\n        this.updateChart()  \r\n    }\r\n\r\n    updateChart = async () => {\r\n        let response = await getGiStatistics()\r\n        if(response.status === 0){\r\n            let gistatics = response.gistatics\r\n            console.log('gistatics',gistatics)\r\n            this.setState({gistatics})\r\n        }else{\r\n            message.error(response.msg)\r\n        }\r\n    }\r\n\r\n    getOption = () => {\r\n        var option = {\r\n            title: {\r\n                text: 'Global-Int Request Total'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['Total']\r\n            },\r\n            xAxis: {\r\n                data: [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]\r\n            },\r\n            yAxis: {},\r\n            series: [{\r\n                name: 'Total',\r\n                type: 'bar',\r\n                data: this.state.gistatics\r\n            }]\r\n        };\r\n\r\n        return option;\r\n    }\r\n    render() {\r\n        const title = 'Global International Request Statistics'\r\n\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.updateChart}>Update</Button>\r\n                </Card>\r\n                <Card title={title}>\r\n                    <ReactEcharts option={this.getOption()} />\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({}),\r\n    {}\r\n)(GIStatistics)\r\n"]},"metadata":{},"sourceType":"module"}