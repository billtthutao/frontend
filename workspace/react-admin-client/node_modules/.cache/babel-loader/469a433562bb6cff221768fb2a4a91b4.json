{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Card,DatePicker,Space}from'antd';import moment from'moment';import ReactEcharts from'echarts-for-react';import'./Home.less';import{getGIStatistics,getDoStatistics}from'../../api';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var RangePicker=DatePicker.RangePicker;var Home=/*#__PURE__*/function(_Component){_inherits(Home,_Component);var _super=_createSuper(Home);function Home(){var _this;_classCallCheck(this,Home);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.getOptionForGrantTotal=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var giResponse,gistatistics,giTotal,doResponse,dostatistics,doTotal,option;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getGIStatistics();case 2:giResponse=_context.sent;gistatistics=[];giTotal=0;if(giResponse.code===0){gistatistics=giResponse.data.gistatistics;giTotal=giResponse.data.giTotal;}else{message.error(\"Fetch Global International Statistics failed\");}_context.next=8;return getDoStatistics();case 8:doResponse=_context.sent;dostatistics=[];doTotal=0;if(doResponse.code===0){dostatistics=doResponse.data.dostatistics;doTotal=doResponse.data.doTotal;}else{message.error(\"Fetch Domestic Statistics failed\");}option={title:{text:'Grant Total'},tooltip:{trigger:'axis'},legend:{data:['Global-Int','Domestic']},grid:{left:'3%',right:'4%',bottom:'3%',containLabel:true},toolbox:{feature:{saveAsImage:{}}},xAxis:{type:'category',boundaryGap:false,data:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]},yAxis:{type:'value'},series:[{name:'Global-Int',type:'line',stack:'Total',data:gistatistics},{name:'Domestic',type:'line',stack:'Total',data:dostatistics}]};return _context.abrupt(\"return\",option);case 14:case\"end\":return _context.stop();}}},_callee);}));_this.state={requestTotal:{gi:giTotal,do:doTotal}};return _this;}_createClass(Home,[{key:\"render\",value:// extra = (\n//     <Space direction=\"vertical\" size={12}>\n//     <RangePicker\n//       defaultValue={[moment('2015/01/01', this.dateFormat), moment('2015/01/01', this.dateFormat)]}\n//       format={this.dateFormat}\n//     />\n//   </Space>\n// )\nfunction render(){return/*#__PURE__*/_jsx(\"div\",{className:\"home\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grantTotal\",children:[/*#__PURE__*/_jsxs(Card,{title:\"Proxy Forms Request Total\",style:{width:250},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Global-Int: \",this.state.requestTotal.gi]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Domestic: \",this.state.requestTotal.do]})]}),/*#__PURE__*/_jsx(ReactEcharts,{option:this.getOptionForGrantTotal()})]})});}}]);return Home;}(Component);export{Home as default};","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/Home/Home.jsx"],"names":["React","Component","Card","DatePicker","Space","moment","ReactEcharts","getGIStatistics","getDoStatistics","RangePicker","Home","getOptionForGrantTotal","giResponse","gistatistics","giTotal","code","data","message","error","doResponse","dostatistics","doTotal","option","title","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","series","name","stack","state","requestTotal","gi","do","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, DatePicker, Space } from 'antd'\r\nimport moment from 'moment';\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport './Home.less'\r\nimport {getGIStatistics, getDoStatistics} from '../../api'\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class Home extends Component {\r\n\r\n    getOptionForGrantTotal = async () => {\r\n        let giResponse = await getGIStatistics()\r\n        let gistatistics = []\r\n        let giTotal = 0\r\n        if(giResponse.code === 0){\r\n            gistatistics = giResponse.data.gistatistics\r\n            giTotal = giResponse.data.giTotal\r\n        }else{\r\n            message.error(\"Fetch Global International Statistics failed\")\r\n        }\r\n\r\n        let doResponse = await getDoStatistics()\r\n        let dostatistics = []\r\n        let doTotal = 0\r\n        if(doResponse.code === 0){\r\n            dostatistics = doResponse.data.dostatistics\r\n            doTotal = doResponse.data.doTotal\r\n        }else{\r\n            message.error(\"Fetch Domestic Statistics failed\")\r\n        }\r\n\r\n        var option = {\r\n            title: {\r\n                text: 'Grant Total'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['Global-Int', 'Domestic']\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Global-Int',\r\n                    type: 'line',\r\n                    stack: 'Total',\r\n                    data: gistatistics\r\n                },\r\n                {\r\n                    name: 'Domestic',\r\n                    type: 'line',\r\n                    stack: 'Total',\r\n                    data: dostatistics\r\n                },\r\n            ]\r\n        };\r\n\r\n        return option;\r\n    }\r\n\r\n    \r\n    state = { requestTotal: { gi: giTotal, do: doTotal } }\r\n\r\n    // extra = (\r\n    //     <Space direction=\"vertical\" size={12}>\r\n    //     <RangePicker\r\n    //       defaultValue={[moment('2015/01/01', this.dateFormat), moment('2015/01/01', this.dateFormat)]}\r\n    //       format={this.dateFormat}\r\n    //     />\r\n    //   </Space>\r\n    // )\r\n\r\n    render() {\r\n        return (\r\n            <div className='home'>\r\n                <div className=\"grantTotal\">\r\n                    <Card title='Proxy Forms Request Total' style={{ width: 250 }}>\r\n                        <p>Global-Int: {this.state.requestTotal.gi}</p>\r\n                        <p>Domestic: {this.state.requestTotal.do}</p>\r\n                    </Card>\r\n                    <ReactEcharts option={this.getOptionForGrantTotal()} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}