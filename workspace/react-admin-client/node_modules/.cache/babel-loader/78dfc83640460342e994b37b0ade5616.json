{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Card,DatePicker,message}from'antd';import moment from'moment';import ReactEcharts from'echarts-for-react';import'./Home.less';import{getGiStatistics,getDoStatistics}from'../../api';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var RangePicker=DatePicker.RangePicker;var Home=/*#__PURE__*/function(_Component){_inherits(Home,_Component);var _super=_createSuper(Home);function Home(props){var _this;_classCallCheck(this,Home);_this=_super.call(this,props);_this.getGiChart=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,gistatistics,giTotal;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getGiStatistics();case 2:response=_context.sent;if(response.code===0){gistatistics=response.data.gistatistics;giTotal=response.data.giTotal;_this.setState({gistatistics:gistatistics,giTotal:giTotal});}else{message.error(response.msg);}case 4:case\"end\":return _context.stop();}}},_callee);}));_this.getDoChart=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,dostatistics,doTotal;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return getDoStatistics();case 2:response=_context2.sent;if(response.code===0){dostatistics=response.data.dostatistics;doTotal=response.data.doTotal;_this.setState({dostatistics:dostatistics,doTotal:doTotal});}else{message.error(response.msg);}case 4:case\"end\":return _context2.stop();}}},_callee2);}));_this.getOptionForGrantTotal=function(){var option={title:{text:'Grant Total'},tooltip:{trigger:'axis'},legend:{data:['Global-Int','Domestic']},grid:{left:'3%',right:'4%',bottom:'3%',containLabel:true},toolbox:{feature:{saveAsImage:{}}},xAxis:{type:'category',boundaryGap:false,data:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"]},yAxis:{type:'value'},series:[{name:'Global-Int',type:'line',// stack: 'Total',\ndata:_this.state.gistatistics},{name:'Domestic',type:'line',// stack: 'Total',\ndata:_this.state.dostatistics}]};return option;};_this.state={dostatistics:[0,0,0,0,0,0,0,0,0,0,0,0],gistatistics:[0,0,0,0,0,0,0,0,0,0,0,0],giTotal:0,doTotal:0};_this.getGiChart();_this.getDoChart();return _this;}_createClass(Home,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"div\",{className:\"home\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"grantTotal\",children:[/*#__PURE__*/_jsxs(Card,{title:\"Proxy Forms Request Total\",style:{width:250},children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Global-Int: \",this.state.giTotal]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Domestic: \",this.state.doTotal]})]}),/*#__PURE__*/_jsx(ReactEcharts,{option:this.getOptionForGrantTotal()})]})});}}]);return Home;}(Component);export{Home as default};","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/Home/Home.jsx"],"names":["React","Component","Card","DatePicker","message","moment","ReactEcharts","getGiStatistics","getDoStatistics","RangePicker","Home","props","getGiChart","response","code","gistatistics","data","giTotal","setState","error","msg","getDoChart","dostatistics","doTotal","getOptionForGrantTotal","option","title","text","tooltip","trigger","legend","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","yAxis","series","name","state","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, DatePicker, message } from 'antd'\r\nimport moment from 'moment';\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport './Home.less'\r\nimport {getGiStatistics, getDoStatistics} from '../../api'\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {dostatistics:[0,0,0,0,0,0,0,0,0,0,0,0],gistatistics:[0,0,0,0,0,0,0,0,0,0,0,0],giTotal: 0, doTotal: 0} \r\n        this.getGiChart()  \r\n        this.getDoChart()\r\n    }\r\n\r\n    getGiChart = async () => {\r\n        let response = await getGiStatistics()\r\n        if(response.code === 0){\r\n            let gistatistics = response.data.gistatistics\r\n            let giTotal = response.data.giTotal\r\n            this.setState({gistatistics,giTotal})\r\n        }else{\r\n            message.error(response.msg)\r\n        }\r\n    }\r\n\r\n    getDoChart = async () => {\r\n        let response = await getDoStatistics()\r\n        if(response.code === 0){\r\n            let dostatistics = response.data.dostatistics\r\n            let doTotal = response.data.doTotal\r\n            this.setState({dostatistics,doTotal})\r\n        }else{\r\n            message.error(response.msg)\r\n        }\r\n    }\r\n\r\n    getOptionForGrantTotal = () => {\r\n        var option = {\r\n            title: {\r\n                text: 'Grant Total'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['Global-Int', 'Domestic']\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Global-Int',\r\n                    type: 'line',\r\n                    // stack: 'Total',\r\n                    data: this.state.gistatistics\r\n                },\r\n                {\r\n                    name: 'Domestic',\r\n                    type: 'line',\r\n                    // stack: 'Total',\r\n                    data: this.state.dostatistics\r\n                },\r\n            ]\r\n        };\r\n\r\n        return option;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='home'>\r\n                <div className=\"grantTotal\">\r\n                    <Card title='Proxy Forms Request Total' style={{ width: 250 }}>\r\n                        <p>Global-Int: {this.state.giTotal}</p>\r\n                        <p>Domestic: {this.state.doTotal}</p>\r\n                    </Card>\r\n                    <ReactEcharts option={this.getOptionForGrantTotal()} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}