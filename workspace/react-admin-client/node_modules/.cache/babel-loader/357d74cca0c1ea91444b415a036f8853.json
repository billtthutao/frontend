{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaoHu\\\\Desktop\\\\\\u524D\\u7AEF\\\\workspace\\\\react-admin-client\\\\src\\\\containers\\\\Home\\\\Home.jsx\";\nimport React, { Component } from 'react';\nimport { Card, DatePicker, Space } from 'antd';\nimport moment from 'moment';\nimport ReactEcharts from 'echarts-for-react';\nimport './Home.less';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  RangePicker\n} = DatePicker;\nconst dateFormat = 'YYYY/MM/DD';\nconst tabList = [{\n  key: 'globalInt',\n  tab: 'Global-Int'\n}, {\n  key: 'domestic',\n  tab: 'Domestic'\n}];\nconst contentList = {\n  globalInt: /*#__PURE__*/_jsxDEV(ReactEcharts, {\n    option: this.getOptionForGiTotal()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 16\n  }, this),\n  domestic: /*#__PURE__*/_jsxDEV(ReactEcharts, {\n    option: this.getOptionForDo()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 15\n  }, this)\n};\nexport default class Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      key: 'tab1',\n      noTitleKey: 'app'\n    };\n\n    this.onTabChange = (key, type) => {\n      console.log(key, type);\n      this.setState({\n        [type]: key\n      });\n    };\n\n    this.getOptionForGrantTotal = () => {\n      var option = {\n        title: {\n          text: 'Grant Total'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        legend: {\n          data: ['Global-Int', 'Domestic']\n        },\n        grid: {\n          left: '3%',\n          right: '4%',\n          bottom: '3%',\n          containLabel: true\n        },\n        toolbox: {\n          feature: {\n            saveAsImage: {}\n          }\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          name: 'Global-Int',\n          type: 'line',\n          stack: 'Total',\n          data: [120, 132, 101, 134, 90, 230, 210, 120, 132, 101, 134, 90, 230, 210]\n        }, {\n          name: 'Domestic',\n          type: 'line',\n          stack: 'Total',\n          data: [220, 182, 191, 234, 290, 330, 310, 220, 182, 191, 234, 290, 330, 310]\n        }]\n      };\n      return option;\n    };\n\n    this.getOptionForGi = (startDate, endDate) => {\n      let option = {\n        xAxis: {\n          type: 'category',\n          data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: [820, 932, 901, 934, 1290, 1330, 1320, 820, 932, 901, 934, 1290],\n          type: 'line',\n          smooth: true\n        }]\n      };\n      return option;\n    };\n\n    this.getOptionForDo = (startDate, endDate) => {\n      let option = {\n        xAxis: {\n          type: 'category',\n          data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: [820, 932, 901, 934, 1290, 1330, 1320, 820, 932, 901, 934, 1290],\n          type: 'line',\n          smooth: true\n        }]\n      };\n      return option;\n    };\n\n    this.state = {\n      requestTotal: {\n        gi: 1000,\n        do: 800\n      }\n    };\n    this.extra = /*#__PURE__*/_jsxDEV(Space, {\n      direction: \"vertical\",\n      size: 12,\n      children: /*#__PURE__*/_jsxDEV(RangePicker, {\n        defaultValue: [moment('2015/01/01', dateFormat), moment('2015/01/01', dateFormat)],\n        format: dateFormat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grantTotal\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          title: \"Proxy Forms Request Total\",\n          style: {\n            width: 250\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Global-Int: \", this.state.requestTotal.gi]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Domestic: \", this.state.requestTotal.do]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ReactEcharts, {\n          option: this.getOptionForGrantTotal()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '100%'\n          },\n          title: \"Statistics\",\n          extra: this.extra,\n          tabList: tabList,\n          activeTabKey: this.state.key,\n          onTabChange: key => {\n            this.onTabChange(key, 'key');\n          },\n          children: contentList[this.state.key]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/Home/Home.jsx"],"names":["React","Component","Card","DatePicker","Space","moment","ReactEcharts","RangePicker","dateFormat","tabList","key","tab","contentList","globalInt","getOptionForGiTotal","domestic","getOptionForDo","Home","state","noTitleKey","onTabChange","type","console","log","setState","getOptionForGrantTotal","option","title","text","tooltip","trigger","legend","data","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","boundaryGap","yAxis","series","name","stack","getOptionForGi","startDate","endDate","smooth","requestTotal","gi","do","extra","render","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,KAA3B,QAAwC,MAAxC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAO,aAAP;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAkBJ,UAAxB;AAEA,MAAMK,UAAU,GAAG,YAAnB;AAEA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,GAAG,EAAE,WADT;AAEIC,EAAAA,GAAG,EAAE;AAFT,CADY,EAKZ;AACID,EAAAA,GAAG,EAAE,UADT;AAEIC,EAAAA,GAAG,EAAE;AAFT,CALY,CAAhB;AAWA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,SAAS,eAAE,QAAC,YAAD;AAAc,IAAA,MAAM,EAAE,KAAKC,mBAAL;AAAtB;AAAA;AAAA;AAAA;AAAA,UADK;AAEhBC,EAAAA,QAAQ,eAAE,QAAC,YAAD;AAAc,IAAA,MAAM,EAAE,KAAKC,cAAL;AAAtB;AAAA;AAAA;AAAA;AAAA;AAFM,CAApB;AAKA,eAAe,MAAMC,IAAN,SAAmBhB,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAExCiB,KAFwC,GAEhC;AACJR,MAAAA,GAAG,EAAE,MADD;AAEJS,MAAAA,UAAU,EAAE;AAFR,KAFgC;;AAAA,SAOxCC,WAPwC,GAO1B,CAACV,GAAD,EAAMW,IAAN,KAAe;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYb,GAAZ,EAAiBW,IAAjB;AACA,WAAKG,QAAL,CAAc;AAAE,SAACH,IAAD,GAAQX;AAAV,OAAd;AACH,KAVuC;;AAAA,SAYxCe,sBAZwC,GAYf,MAAM;AAC3B,UAAIC,MAAM,GAAG;AACTC,QAAAA,KAAK,EAAE;AACHC,UAAAA,IAAI,EAAE;AADH,SADE;AAITC,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE;AADJ,SAJA;AAOTC,QAAAA,MAAM,EAAE;AACJC,UAAAA,IAAI,EAAE,CAAC,YAAD,EAAe,UAAf;AADF,SAPC;AAUTC,QAAAA,IAAI,EAAE;AACFC,UAAAA,IAAI,EAAE,IADJ;AAEFC,UAAAA,KAAK,EAAE,IAFL;AAGFC,UAAAA,MAAM,EAAE,IAHN;AAIFC,UAAAA,YAAY,EAAE;AAJZ,SAVG;AAgBTC,QAAAA,OAAO,EAAE;AACLC,UAAAA,OAAO,EAAE;AACLC,YAAAA,WAAW,EAAE;AADR;AADJ,SAhBA;AAqBTC,QAAAA,KAAK,EAAE;AACHpB,UAAAA,IAAI,EAAE,UADH;AAEHqB,UAAAA,WAAW,EAAE,KAFV;AAGHV,UAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E;AAHH,SArBE;AA0BTW,QAAAA,KAAK,EAAE;AACHtB,UAAAA,IAAI,EAAE;AADH,SA1BE;AA6BTuB,QAAAA,MAAM,EAAE,CACJ;AACIC,UAAAA,IAAI,EAAE,YADV;AAEIxB,UAAAA,IAAI,EAAE,MAFV;AAGIyB,UAAAA,KAAK,EAAE,OAHX;AAIId,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,EAArB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,GAA7C,EAAkD,GAAlD,EAAuD,EAAvD,EAA2D,GAA3D,EAAgE,GAAhE;AAJV,SADI,EAOJ;AACIa,UAAAA,IAAI,EAAE,UADV;AAEIxB,UAAAA,IAAI,EAAE,MAFV;AAGIyB,UAAAA,KAAK,EAAE,OAHX;AAIId,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,EAAkE,GAAlE;AAJV,SAPI;AA7BC,OAAb;AA6CA,aAAON,MAAP;AACH,KA3DuC;;AAAA,SA6DxCqB,cA7DwC,GA6DvB,CAACC,SAAD,EAAWC,OAAX,KAAuB;AACpC,UAAIvB,MAAM,GAAG;AACTe,QAAAA,KAAK,EAAE;AACHpB,UAAAA,IAAI,EAAE,UADH;AAEHW,UAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E;AAFH,SADE;AAKTW,QAAAA,KAAK,EAAE;AACHtB,UAAAA,IAAI,EAAE;AADH,SALE;AAQTuB,QAAAA,MAAM,EAAE,CAAC;AACLZ,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAsC,GAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAqD,GAArD,EAA0D,IAA1D,CADD;AAELX,UAAAA,IAAI,EAAE,MAFD;AAGL6B,UAAAA,MAAM,EAAE;AAHH,SAAD;AARC,OAAb;AAeA,aAAOxB,MAAP;AACH,KA9EuC;;AAAA,SA+ExCV,cA/EwC,GA+EvB,CAACgC,SAAD,EAAWC,OAAX,KAAuB;AACpC,UAAIvB,MAAM,GAAG;AACTe,QAAAA,KAAK,EAAE;AACHpB,UAAAA,IAAI,EAAE,UADH;AAEHW,UAAAA,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E;AAFH,SADE;AAKTW,QAAAA,KAAK,EAAE;AACHtB,UAAAA,IAAI,EAAE;AADH,SALE;AAQTuB,QAAAA,MAAM,EAAE,CAAC;AACLZ,UAAAA,IAAI,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,IAAjC,EAAsC,GAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAqD,GAArD,EAA0D,IAA1D,CADD;AAELX,UAAAA,IAAI,EAAE,MAFD;AAGL6B,UAAAA,MAAM,EAAE;AAHH,SAAD;AARC,OAAb;AAeA,aAAOxB,MAAP;AACH,KAhGuC;;AAAA,SAkGxCR,KAlGwC,GAkGhC;AAAEiC,MAAAA,YAAY,EAAE;AAAEC,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,EAAE,EAAE;AAAhB;AAAhB,KAlGgC;AAAA,SAoGxCC,KApGwC,gBAqGpC,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAE,EAAlC;AAAA,6BACA,QAAC,WAAD;AACE,QAAA,YAAY,EAAE,CAACjD,MAAM,CAAC,YAAD,EAAeG,UAAf,CAAP,EAAmCH,MAAM,CAAC,YAAD,EAAeG,UAAf,CAAzC,CADhB;AAEE,QAAA,MAAM,EAAEA;AAFV;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YArGoC;AAAA;;AA4GxC+C,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,2BAAZ;AAAwC,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAA/C;AAAA,kCACI;AAAA,uCAAgB,KAAKtC,KAAL,CAAWiC,YAAX,CAAwBC,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,qCAAc,KAAKlC,KAAL,CAAWiC,YAAX,CAAwBE,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,YAAD;AAAc,UAAA,MAAM,EAAE,KAAK5B,sBAAL;AAAtB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACI,QAAC,IAAD;AACI,UAAA,KAAK,EAAE;AAAE+B,YAAAA,KAAK,EAAE;AAAT,WADX;AAEI,UAAA,KAAK,EAAC,YAFV;AAGI,UAAA,KAAK,EAAE,KAAKF,KAHhB;AAII,UAAA,OAAO,EAAE7C,OAJb;AAKI,UAAA,YAAY,EAAE,KAAKS,KAAL,CAAWR,GAL7B;AAMI,UAAA,WAAW,EAAEA,GAAG,IAAI;AAChB,iBAAKU,WAAL,CAAiBV,GAAjB,EAAsB,KAAtB;AACH,WARL;AAAA,oBAUKE,WAAW,CAAC,KAAKM,KAAL,CAAWR,GAAZ;AAVhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAyBH;;AAtIuC","sourcesContent":["import React, { Component } from 'react'\r\nimport { Card, DatePicker, Space } from 'antd'\r\nimport moment from 'moment';\r\nimport ReactEcharts from 'echarts-for-react'\r\nimport './Home.less'\r\n\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst dateFormat = 'YYYY/MM/DD';\r\n\r\nconst tabList = [\r\n    {\r\n        key: 'globalInt',\r\n        tab: 'Global-Int',\r\n    },\r\n    {\r\n        key: 'domestic',\r\n        tab: 'Domestic',\r\n    },\r\n];\r\n\r\nconst contentList = {\r\n    globalInt: <ReactEcharts option={this.getOptionForGiTotal()} />,\r\n    domestic: <ReactEcharts option={this.getOptionForDo()} />,\r\n};\r\n\r\nexport default class Home extends Component {\r\n\r\n    state = {\r\n        key: 'tab1',\r\n        noTitleKey: 'app',\r\n    };\r\n\r\n    onTabChange = (key, type) => {\r\n        console.log(key, type);\r\n        this.setState({ [type]: key });\r\n    };\r\n\r\n    getOptionForGrantTotal = () => {\r\n        var option = {\r\n            title: {\r\n                text: 'Grant Total'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data: ['Global-Int', 'Domestic']\r\n            },\r\n            grid: {\r\n                left: '3%',\r\n                right: '4%',\r\n                bottom: '3%',\r\n                containLabel: true\r\n            },\r\n            toolbox: {\r\n                feature: {\r\n                    saveAsImage: {}\r\n                }\r\n            },\r\n            xAxis: {\r\n                type: 'category',\r\n                boundaryGap: false,\r\n                data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [\r\n                {\r\n                    name: 'Global-Int',\r\n                    type: 'line',\r\n                    stack: 'Total',\r\n                    data: [120, 132, 101, 134, 90, 230, 210, 120, 132, 101, 134, 90, 230, 210]\r\n                },\r\n                {\r\n                    name: 'Domestic',\r\n                    type: 'line',\r\n                    stack: 'Total',\r\n                    data: [220, 182, 191, 234, 290, 330, 310, 220, 182, 191, 234, 290, 330, 310]\r\n                },\r\n            ]\r\n        };\r\n\r\n        return option;\r\n    }\r\n\r\n    getOptionForGi = (startDate,endDate) => {\r\n        let option = {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: [820, 932, 901, 934, 1290, 1330, 1320,820, 932, 901, 934, 1290],\r\n                type: 'line',\r\n                smooth: true\r\n            }]\r\n        };\r\n\r\n        return option;\r\n    }\r\n    getOptionForDo = (startDate,endDate) => {\r\n        let option = {\r\n            xAxis: {\r\n                type: 'category',\r\n                data: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n            },\r\n            yAxis: {\r\n                type: 'value'\r\n            },\r\n            series: [{\r\n                data: [820, 932, 901, 934, 1290, 1330, 1320,820, 932, 901, 934, 1290],\r\n                type: 'line',\r\n                smooth: true\r\n            }]\r\n        };\r\n\r\n        return option;\r\n    }\r\n\r\n    state = { requestTotal: { gi: 1000, do: 800 } }\r\n\r\n    extra = (\r\n        <Space direction=\"vertical\" size={12}>\r\n        <RangePicker\r\n          defaultValue={[moment('2015/01/01', dateFormat), moment('2015/01/01', dateFormat)]}\r\n          format={dateFormat}\r\n        />\r\n      </Space>\r\n    )\r\n    render() {\r\n        return (\r\n            <div className='home'>\r\n                <div className=\"grantTotal\">\r\n                    <Card title='Proxy Forms Request Total' style={{ width: 250 }}>\r\n                        <p>Global-Int: {this.state.requestTotal.gi}</p>\r\n                        <p>Domestic: {this.state.requestTotal.do}</p>\r\n                    </Card>\r\n                    <ReactEcharts option={this.getOptionForGrantTotal()} />\r\n                </div>\r\n                <div className=\"details\">\r\n                    <Card\r\n                        style={{ width: '100%' }}\r\n                        title=\"Statistics\"\r\n                        extra={this.extra}\r\n                        tabList={tabList}\r\n                        activeTabKey={this.state.key}\r\n                        onTabChange={key => {\r\n                            this.onTabChange(key, 'key');\r\n                        }}\r\n                    >\r\n                        {contentList[this.state.key]}\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}