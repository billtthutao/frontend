{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaoHu\\\\Desktop\\\\\\u524D\\u7AEF\\\\workspace\\\\react-admin-client\\\\src\\\\containers\\\\DOSubmit\\\\DOSubmit.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Upload, Input, Card, message } from 'antd';\nimport { UploadOutlined, CheckOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n}; //handle the single file upload\n\nconst normFile = e => {\n  console.log('Upload event:', e);\n  let {\n    file,\n    fileList\n  } = e;\n\n  if (e.file.status === 'done') {\n    message.success('File upload successful'); //update the file name in oss server\n\n    const {\n      name,\n      url\n    } = e.file.response;\n    file = fileList[fileList.length - 1];\n    file.name = name;\n    file.url = url;\n  } else if (e.file.status === 'error') {\n    message.error('File upload failed');\n  }\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n}; //submit the form data to back end to process\n\n\nconst onFinish = values => {\n  console.log('Received values of form: ', values);\n};\n\nclass DOSubmit extends Component {\n  render() {\n    const title = 'Submit Domestic Mobility Proxy Forms';\n\n    const extra = /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsxDEV(CheckOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 53\n      }, this),\n      onClick: () => this.props.history.push('/dashboard/do-check'),\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 24\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"validate_other\",\n        ...formItemLayout,\n        onFinish: onFinish,\n        extra: extra,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"upload\",\n          label: \"Upload\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: normFile,\n          extra: \"Upload proxy forms data\",\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            name: \"logo\",\n            action: \"/domestic/upload\",\n            listType: \"text\",\n            accept: \".csv, .xls, .xlsx\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 43\n              }, this),\n              children: \"Click to upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: ['user', 'introduction'],\n          label: \"Comments\",\n          children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n            allowClear: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            span: 12,\n            offset: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({}), {})(DOSubmit);","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/DOSubmit/DOSubmit.jsx"],"names":["React","Component","connect","Button","Form","Upload","Input","Card","message","UploadOutlined","CheckOutlined","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","file","fileList","status","success","name","url","response","length","error","Array","isArray","onFinish","values","DOSubmit","render","title","extra","props","history","push","offset","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, Upload, Input, Card, message } from 'antd'\r\nimport { UploadOutlined, CheckOutlined } from '@ant-design/icons';\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 14 },\r\n};\r\n\r\n//handle the single file upload\r\nconst normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n    let {file,fileList} = e;\r\n\r\n    if(e.file.status === 'done'){\r\n        message.success('File upload successful')\r\n        //update the file name in oss server\r\n        const {name,url} = e.file.response\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n    }else if(e.file.status === 'error'){\r\n        message.error('File upload failed')\r\n    }\r\n\r\n    if (Array.isArray(e)) {\r\n        return e;\r\n    }\r\n    return e && e.fileList;\r\n};\r\n\r\n//submit the form data to back end to process\r\nconst onFinish = (values) => {\r\n    console.log('Received values of form: ', values);\r\n};\r\n\r\nclass DOSubmit extends Component {\r\n\r\n    render() {\r\n        const title = 'Submit Domestic Mobility Proxy Forms';\r\n        const extra = (<Button type=\"primary\" icon={<CheckOutlined />} onClick={()=>this.props.history.push('/dashboard/do-check')}>Check</Button>)\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Form name=\"validate_other\" {...formItemLayout} onFinish={onFinish} extra={extra}>\r\n                {/* parameter name is identifying the file-name parm sent to back end */}\r\n                    <Form.Item\r\n                        name=\"upload\"\r\n                        label=\"Upload\"\r\n                        valuePropName=\"fileList\"\r\n                        getValueFromEvent={normFile}\r\n                        extra=\"Upload proxy forms data\"\r\n                    >\r\n                        {/* backend should upload the file to oss server and return the result below\r\n                            {\r\n                                \"status\": 0,\r\n                                \"data\": {\r\n                                    \"name\": \"file-xxxxxxxx\",\r\n                                    \"url\": \"http://xxxxxxxxx\"\r\n                                }\r\n                            }\r\n                        */}\r\n                        <Upload name=\"logo\" action=\"/domestic/upload\" listType=\"text\" accept=\".csv, .xls, .xlsx\">\r\n                            <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                        </Upload>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={['user', 'introduction']} label=\"Comments\">\r\n                        <Input.TextArea allowClear={true}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                    </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({}),\r\n    {}\r\n)(DOSubmit)\r\n\r\n"]},"metadata":{},"sourceType":"module"}