{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaoHu\\\\Desktop\\\\\\u524D\\u7AEF\\\\workspace\\\\react-admin-client\\\\src\\\\containers\\\\DashboardSider\\\\DashboardSider.jsx\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport './DashboardSider.less';\nimport { Link } from 'react-router-dom';\nimport menuList from '../../config/menuListConfig';\nimport { withRouter } from 'react-router-dom';\nimport { Layout, Menu } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SubMenu\n} = Menu;\nconst {\n  Sider\n} = Layout;\n\nclass DashboardSider extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.generateMenuList = menuList => {\n      return menuList.map(menu => {\n        if (!menu.children) {\n          return /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: menu.icon,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: menu.key,\n              children: menu.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this)\n          }, menu.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 21\n          }, this);\n        } else {\n          //check if current item should be open\n          const cItem = menu.children.find(item => item.key === this.path);\n\n          if (cItem) {\n            this.openKey = menu.key;\n          }\n\n          return /*#__PURE__*/_jsxDEV(SubMenu, {\n            icon: menu.icon,\n            title: menu.title,\n            children: this.generateMenuList(menu.children)\n          }, menu.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this);\n        }\n      });\n    };\n\n    this.path = this.props.location.pathname;\n    this.menuNodes = this.generateMenuList(menuList);\n  }\n\n  render() {\n    this.path = this.props.location.pathname; //check which item should be open\n\n    menuList.forEach(menu => {\n      if (menu.children) {\n        const cItem = menu.children.find(item => item.key === this.path);\n\n        if (cItem) {\n          this.openKey = menu.key;\n          console.log(this.openKey);\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(Sider, {\n      width: 200,\n      className: \"site-layout-background\",\n      children: /*#__PURE__*/_jsxDEV(Menu, {\n        theme: \"dark\",\n        mode: \"inline\",\n        defaultSelectedKeys: [this.path],\n        defaultOpenKeys: [this.openKey],\n        style: {\n          height: '100%',\n          borderRight: 0\n        },\n        children: this.menuNodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({}), {})(withRouter(DashboardSider));","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/DashboardSider/DashboardSider.jsx"],"names":["React","PureComponent","connect","Link","menuList","withRouter","Layout","Menu","SubMenu","Sider","DashboardSider","constructor","props","generateMenuList","map","menu","children","icon","key","title","cItem","find","item","path","openKey","location","pathname","menuNodes","render","forEach","console","log","height","borderRight","state"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './DashboardSider.less'\r\nimport { Link } from 'react-router-dom'\r\nimport menuList from '../../config/menuListConfig'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Layout, Menu } from 'antd';\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider } = Layout;\r\n\r\nclass DashboardSider extends PureComponent {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.path = this.props.location.pathname\r\n        this.menuNodes = this.generateMenuList(menuList)\r\n    }\r\n\r\n    generateMenuList = (menuList) => {\r\n        return menuList.map(menu => {\r\n            if (!menu.children) {\r\n                return (\r\n                    <Menu.Item key={menu.key} icon={menu.icon}>\r\n                        <Link to={menu.key}>{menu.title}</Link>\r\n                    </Menu.Item>\r\n                )\r\n            } else {\r\n                //check if current item should be open\r\n                const cItem = menu.children.find(item => item.key === this.path)\r\n                if (cItem) {\r\n                    this.openKey = menu.key\r\n                }\r\n\r\n                return (\r\n                    <SubMenu key={menu.key} icon={menu.icon} title={menu.title}>\r\n                        {\r\n                            this.generateMenuList(menu.children)\r\n                        }\r\n                    </SubMenu>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        this.path = this.props.location.pathname\r\n        //check which item should be open\r\n        menuList.forEach(menu => {\r\n            if (menu.children) {\r\n                const cItem = menu.children.find(item => item.key === this.path)\r\n                if (cItem) {\r\n                    this.openKey = menu.key\r\n                    console.log(this.openKey)\r\n                }\r\n            }\r\n        })\r\n\r\n        return (\r\n            <Sider width={200} className=\"site-layout-background\">\r\n                <Menu\r\n                    theme=\"dark\"\r\n                    mode=\"inline\"\r\n                    defaultSelectedKeys={[this.path]}\r\n                    defaultOpenKeys={[this.openKey]}\r\n                    style={{ height: '100%', borderRight: 0 }}\r\n                >\r\n                    {this.menuNodes}\r\n                </Menu>\r\n            </Sider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({}),\r\n    {}\r\n)(withRouter(DashboardSider))\r\n"]},"metadata":{},"sourceType":"module"}