{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaoHu\\\\Desktop\\\\\\u524D\\u7AEF\\\\workspace\\\\react-admin-client\\\\src\\\\containers\\\\DashboardBreadcrumb\\\\DashboardBreadcrumb.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Breadcrumb } from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport menuList from '../../config/menuListConfig';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DashboardBreadcrumb extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getPathNodes = (menuList, path) => {\n      console.log(menuList, path);\n\n      for (let menu of menuList) {\n        let result = menu.title;\n\n        if (menu.key === path) {\n          return result;\n        } else if (menu.children) {\n          let subresult = this.getPathNodes(menu.children, path);\n\n          if (subresult) {\n            return result + \",\" + subresult;\n          }\n        }\n      } // return ['Dashboard'];\n\n    };\n  }\n\n  render() {\n    console.log(this.getPathNodes(menuList, this.props.location.pathname));\n    this.pathNodes = (this.getPathNodes(menuList, this.props.location.pathname) || []).split(',');\n    return /*#__PURE__*/_jsxDEV(Breadcrumb, {\n      style: {\n        margin: '16px 0'\n      },\n      children: this.pathNodes.map(node => {\n        return /*#__PURE__*/_jsxDEV(Breadcrumb.Item, {\n          children: node\n        }, node, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 32\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({}), {})(withRouter(DashboardBreadcrumb));","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/DashboardBreadcrumb/DashboardBreadcrumb.jsx"],"names":["React","Component","connect","Breadcrumb","withRouter","menuList","DashboardBreadcrumb","getPathNodes","path","console","log","menu","result","title","key","children","subresult","render","props","location","pathname","pathNodes","split","margin","map","node","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,6BAArB;;;AAEA,MAAMC,mBAAN,SAAkCL,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAExCM,YAFwC,GAEzB,CAACF,QAAD,EAAUG,IAAV,KAAmB;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ,EAAqBG,IAArB;;AACA,WAAI,IAAIG,IAAR,IAAgBN,QAAhB,EAAyB;AACrB,YAAIO,MAAM,GAAGD,IAAI,CAACE,KAAlB;;AACA,YAAGF,IAAI,CAACG,GAAL,KAAaN,IAAhB,EAAqB;AACjB,iBAAOI,MAAP;AACH,SAFD,MAEM,IAAGD,IAAI,CAACI,QAAR,EAAiB;AACnB,cAAIC,SAAS,GAAG,KAAKT,YAAL,CAAkBI,IAAI,CAACI,QAAvB,EAAgCP,IAAhC,CAAhB;;AACA,cAAGQ,SAAH,EAAa;AACT,mBAAOJ,MAAM,GAAG,GAAT,GAAeI,SAAtB;AACH;AACJ;AACJ,OAZ6B,CAc9B;;AACH,KAjBuC;AAAA;;AAmBxCC,EAAAA,MAAM,GAAG;AACLR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,YAAL,CAAkBF,QAAlB,EAA4B,KAAKa,KAAL,CAAWC,QAAX,CAAoBC,QAAhD,CAAZ;AACA,SAAKC,SAAL,GAAiB,CAAC,KAAKd,YAAL,CAAkBF,QAAlB,EAA4B,KAAKa,KAAL,CAAWC,QAAX,CAAoBC,QAAhD,KAA6D,EAA9D,EAAkEE,KAAlE,CAAwE,GAAxE,CAAjB;AAEA,wBACI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAnB;AAAA,gBAEQ,KAAKF,SAAL,CAAeG,GAAf,CAAmBC,IAAI,IAAI;AACvB,4BAAO,QAAC,UAAD,CAAY,IAAZ;AAAA,oBAA6BA;AAA7B,WAAsBA,IAAtB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFD;AAFR;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAhCuC;;AAmC5C,eAAevB,OAAO,CAClBwB,KAAK,KAAK,EAAL,CADa,EAElB,EAFkB,CAAP,CAGbtB,UAAU,CAACE,mBAAD,CAHG,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Breadcrumb } from 'antd';\r\nimport { withRouter } from 'react-router-dom'\r\nimport menuList from '../../config/menuListConfig'\r\n\r\nclass DashboardBreadcrumb extends Component {\r\n\r\n    getPathNodes = (menuList,path) => {\r\n        console.log(menuList,path)\r\n        for(let menu of menuList){\r\n            let result = menu.title;\r\n            if(menu.key === path){\r\n                return result;\r\n            }else if(menu.children){\r\n                let subresult = this.getPathNodes(menu.children,path)\r\n                if(subresult){\r\n                    return result + \",\" + subresult;\r\n                }\r\n            }\r\n        }\r\n\r\n        // return ['Dashboard'];\r\n    }\r\n\r\n    render() {\r\n        console.log(this.getPathNodes(menuList, this.props.location.pathname))\r\n        this.pathNodes = (this.getPathNodes(menuList, this.props.location.pathname) || []).split(',')\r\n\r\n        return (\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n                {\r\n                    this.pathNodes.map(node => {\r\n                        return <Breadcrumb.Item key={node}>{node}</Breadcrumb.Item>\r\n                    })\r\n                }\r\n            </Breadcrumb>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({}),\r\n    {}\r\n)(withRouter(DashboardBreadcrumb))\r\n"]},"metadata":{},"sourceType":"module"}