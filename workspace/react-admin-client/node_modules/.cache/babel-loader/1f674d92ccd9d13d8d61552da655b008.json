{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaoHu\\\\Desktop\\\\\\u524D\\u7AEF\\\\workspace\\\\react-admin-client\\\\src\\\\containers\\\\GISubmit\\\\GISubmit.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Form, Upload, Input } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst normFile = e => {\n  console.log('Upload event:', e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nclass GISubmit extends Component {\n  render() {\n    const title = 'Submit Global International Mobility Proxy Forms';\n    return /*#__PURE__*/_jsxDEV(Form, {\n      name: \"validate_other\",\n      ...formItemLayout,\n      onFinish: onFinish,\n      initialValues: {\n        ['input-number']: 3,\n        ['checkbox-group']: ['A', 'B'],\n        rate: 3.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Plain Text\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ant-form-text\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"upload\",\n        label: \"Upload\",\n        valuePropName: \"fileList\",\n        getValueFromEvent: normFile,\n        extra: \"longgggggggggggggggggggggggggggggggggg\",\n        children: /*#__PURE__*/_jsxDEV(Upload, {\n          name: \"logo\",\n          action: \"/upload.do\",\n          listType: \"picture\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 39\n            }, this),\n            children: \"Click to upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: ['user', 'introduction'],\n        label: \"Introduction\",\n        children: /*#__PURE__*/_jsxDEV(Input.TextArea, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          span: 12,\n          offset: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({}), {})(GISubmit);","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/GISubmit/GISubmit.jsx"],"names":["React","Component","connect","Button","Form","Upload","Input","UploadOutlined","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","Array","isArray","fileList","GISubmit","render","title","onFinish","rate","offset","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,MAAvB,EAA+BC,KAA/B,QAA4C,MAA5C;AACA,SAASC,cAAT,QAA+B,mBAA/B;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADS;AAEnBC,EAAAA,UAAU,EAAE;AAAED,IAAAA,IAAI,EAAE;AAAR;AAFO,CAAvB;;AAKA,MAAME,QAAQ,GAAIC,CAAD,IAAY;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,CAA7B;;AACA,MAAIG,KAAK,CAACC,OAAN,CAAcJ,CAAd,CAAJ,EAAsB;AACpB,WAAOA,CAAP;AACD;;AACD,SAAOA,CAAC,IAAIA,CAAC,CAACK,QAAd;AACH,CAND;;AAQA,MAAMC,QAAN,SAAuBlB,SAAvB,CAAiC;AAC7BmB,EAAAA,MAAM,GAAG;AACL,UAAMC,KAAK,GAAG,kDAAd;AAEA,wBACI,QAAC,IAAD;AACI,MAAA,IAAI,EAAC,gBADT;AAAA,SAEQb,cAFR;AAGI,MAAA,QAAQ,EAAEc,QAHd;AAII,MAAA,aAAa,EAAE;AACX,SAAC,cAAD,GAAkB,CADP;AAEX,SAAC,gBAAD,GAAoB,CAAC,GAAD,EAAM,GAAN,CAFT;AAGXC,QAAAA,IAAI,EAAE;AAHK,OAJnB;AAAA,8BAUI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,YAAjB;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,oBAAiCF;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ,eAcI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,KAAK,EAAC,QAFV;AAGI,QAAA,aAAa,EAAC,UAHlB;AAII,QAAA,iBAAiB,EAAET,QAJvB;AAKI,QAAA,KAAK,EAAC,wCALV;AAAA,+BAOI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,MAAb;AAAoB,UAAA,MAAM,EAAC,YAA3B;AAAwC,UAAA,QAAQ,EAAC,SAAjD;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,cAdJ,eA0BI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAE,CAAC,MAAD,EAAS,cAAT,CAAjB;AAA2C,QAAA,KAAK,EAAC,cAAjD;AAAA,+BACI,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA1BJ,eA8BI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,UAAU,EAAE;AAAEF,UAAAA,IAAI,EAAE,EAAR;AAAYc,UAAAA,MAAM,EAAE;AAApB,SAAvB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA9BJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCH;;AA1C4B;;AA6CjC,eAAetB,OAAO,CAClBuB,KAAK,KAAK,EAAL,CADa,EAElB,EAFkB,CAAP,CAGbN,QAHa,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, Upload, Input } from 'antd'\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 14 },\r\n};\r\n\r\nconst normFile = (e: any) => {\r\n    console.log('Upload event:', e);\r\n    if (Array.isArray(e)) {\r\n      return e;\r\n    }\r\n    return e && e.fileList;\r\n};\r\n\r\nclass GISubmit extends Component {\r\n    render() {\r\n        const title = 'Submit Global International Mobility Proxy Forms';\r\n\r\n        return (\r\n            <Form\r\n                name=\"validate_other\"\r\n                {...formItemLayout}\r\n                onFinish={onFinish}\r\n                initialValues={{\r\n                    ['input-number']: 3,\r\n                    ['checkbox-group']: ['A', 'B'],\r\n                    rate: 3.5,\r\n                }}\r\n            >\r\n                <Form.Item label=\"Plain Text\">\r\n                    <span className=\"ant-form-text\">{title}</span>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    name=\"upload\"\r\n                    label=\"Upload\"\r\n                    valuePropName=\"fileList\"\r\n                    getValueFromEvent={normFile}\r\n                    extra=\"longgggggggggggggggggggggggggggggggggg\"\r\n                >\r\n                    <Upload name=\"logo\" action=\"/upload.do\" listType=\"picture\">\r\n                        <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                    </Upload>\r\n                </Form.Item>\r\n\r\n                <Form.Item name={['user', 'introduction']} label=\"Introduction\">\r\n                    <Input.TextArea />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({}),\r\n    {}\r\n)(GISubmit)\r\n"]},"metadata":{},"sourceType":"module"}