{"ast":null,"code":"import _objectSpread from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _regeneratorRuntime from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/TaoHu/Desktop/\\u524D\\u7AEF/workspace/react-admin-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var _this=this;import React,{Component}from'react';import{connect}from'react-redux';import{Button,Form,Upload,Input,Card,message}from'antd';import{UploadOutlined,CheckOutlined}from'@ant-design/icons';import{submitRequests}from'../../api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var formItemLayout={labelCol:{span:6},wrapperCol:{span:14}};//handle the single file upload\nvar normFile=function normFile(e){console.log('Upload event:',e);var file=e.file,fileList=e.fileList;if(e.file.status==='done'){message.success('File upload successful');//update the file name in oss server\nvar _e$file$response$data=e.file.response.data,name=_e$file$response$data.name,url=_e$file$response$data.url;file=fileList[fileList.length-1];file.name=name;file.url=url;}else if(e.file.status==='error'){message.error('File upload failed');}if(Array.isArray(e)){return e;}return e&&e.fileList;};//submit the form data to back end to process\nvar onFinish=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('Received values of form: ',values);_context.next=3;return submitRequests('global-international',values.upload,values.user.comment);case 3:response=_context.sent;if(response.code===0){message.success(response.msg);_this.props.form.setFieldsValue({user_comment:\"\",upload:[]});}else{message.error(response.msg);}case 5:case\"end\":return _context.stop();}}},_callee);}));return function onFinish(_x){return _ref.apply(this,arguments);};}();var GISubmit=/*#__PURE__*/function(_Component){_inherits(GISubmit,_Component);var _super=_createSuper(GISubmit);function GISubmit(){_classCallCheck(this,GISubmit);return _super.apply(this,arguments);}_createClass(GISubmit,[{key:\"render\",value:function render(){var _this2=this;var title='Submit Global International Mobility Proxy Forms';var extra=/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(CheckOutlined,{}),onClick:function onClick(){return _this2.props.history.push('/dashboard/gi-check');},children:\"Check\"});return/*#__PURE__*/_jsx(Card,{title:title,extra:extra,children:/*#__PURE__*/_jsxs(Form,_objectSpread(_objectSpread({name:\"validate_other\"},formItemLayout),{},{onFinish:onFinish,children:[/*#__PURE__*/_jsx(Form.Item,{name:\"upload\",label:\"Upload\",valuePropName:\"fileList\",getValueFromEvent:normFile,extra:\"Upload proxy forms data\",children:/*#__PURE__*/_jsx(Upload,{name:\"requestFile\",action:\"/global-int/upload\",listType:\"text\",accept:\".xls, .xlsx\",maxCount:1,children:/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(UploadOutlined,{}),children:\"Click to upload\"})})}),/*#__PURE__*/_jsx(Form.Item,{name:['user','comment'],label:\"Comment\",children:/*#__PURE__*/_jsx(Input.TextArea,{allowClear:true})}),/*#__PURE__*/_jsx(Form.Item,{wrapperCol:{span:12,offset:6},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",children:\"Submit\"})})]}))});}}]);return GISubmit;}(Component);export default connect(function(state){return{};},{})(GISubmit);","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/GISubmit/GISubmit.jsx"],"names":["React","Component","connect","Button","Form","Upload","Input","Card","message","UploadOutlined","CheckOutlined","submitRequests","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","file","fileList","status","success","response","data","name","url","length","error","Array","isArray","onFinish","values","upload","user","comment","code","msg","props","form","setFieldsValue","user_comment","GISubmit","title","extra","history","push","offset","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button, Form, Upload, Input, Card, message } from 'antd'\r\nimport { UploadOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport {submitRequests} from '../../api'\r\n\r\nconst formItemLayout = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 14 },\r\n};\r\n\r\n//handle the single file upload\r\nconst normFile = (e) => {\r\n    console.log('Upload event:', e);\r\n    let {file,fileList} = e;\r\n\r\n    if(e.file.status === 'done'){\r\n        message.success('File upload successful')\r\n        //update the file name in oss server\r\n        const {name,url} = e.file.response.data\r\n        file = fileList[fileList.length-1]\r\n        file.name = name\r\n        file.url = url\r\n    }else if(e.file.status === 'error'){\r\n        message.error('File upload failed')\r\n    }\r\n\r\n    if (Array.isArray(e)) {\r\n        return e;\r\n    }\r\n    return e && e.fileList;\r\n};\r\n\r\n\r\n//submit the form data to back end to process\r\nconst onFinish = async (values) => {\r\n    console.log('Received values of form: ', values);\r\n    let response = await submitRequests('global-international',values.upload,values.user.comment)\r\n    if(response.code === 0){\r\n        message.success(response.msg)\r\n        this.props.form.setFieldsValue({user_comment:\"\",upload:[]})\r\n    }else{\r\n        message.error(response.msg)\r\n    }\r\n};\r\n\r\nclass GISubmit extends Component {\r\n\r\n    render() {\r\n        const title = 'Submit Global International Mobility Proxy Forms';\r\n        const extra = (<Button type=\"primary\" icon={<CheckOutlined />} onClick={()=>this.props.history.push('/dashboard/gi-check')}>Check</Button>)\r\n\r\n        return (\r\n            <Card title={title} extra={extra}>\r\n                <Form name=\"validate_other\" {...formItemLayout} onFinish={onFinish}>\r\n                {/* parameter name is identifying the file-name parm sent to back end */}\r\n                    <Form.Item\r\n                        name=\"upload\"\r\n                        label=\"Upload\"\r\n                        valuePropName=\"fileList\"\r\n                        getValueFromEvent={normFile}\r\n                        extra=\"Upload proxy forms data\"\r\n                    >\r\n                        {/* backend should upload the file to oss server and return the result below\r\n                            {\r\n                                \"status\": 0,\r\n                                \"data\": {\r\n                                    \"name\": \"file-xxxxxxxx\",\r\n                                    \"url\": \"http://xxxxxxxxx\"\r\n                                }\r\n                            }\r\n                        */}\r\n                        <Upload name=\"requestFile\" action=\"/global-int/upload\" listType=\"text\" accept=\".xls, .xlsx\" maxCount={1}>\r\n                            <Button icon={<UploadOutlined />}>Click to upload</Button>\r\n                        </Upload>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name={['user', 'comment']} label=\"Comment\">\r\n                        <Input.TextArea allowClear={true}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                    </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({}),\r\n    {}\r\n)(GISubmit)\r\n"]},"metadata":{},"sourceType":"module"}