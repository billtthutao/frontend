{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TaoHu\\\\Desktop\\\\\\u524D\\u7AEF\\\\workspace\\\\react-admin-client\\\\src\\\\containers\\\\LeftNav\\\\LeftNav.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './LeftNav.less';\nimport Logo from '../../assets/images/logo.png';\nimport { Link } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport menuList from '../../config/menuListConfig';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SubMenu\n} = Menu;\n\nclass LeftNav extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      collapsed: false\n    };\n\n    this.toggleCollapsed = () => {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    };\n\n    this.generateMenuList = menuList => {\n      return menuList.map(menu => {\n        if (!menu.children) {\n          return /*#__PURE__*/_jsxDEV(Menu.Item, {\n            icon: menu.icon,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: menu.key,\n              children: menu.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 25\n            }, this)\n          }, menu.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this);\n        } else {\n          //check if current item should be open\n          console.log('this.path', path);\n          const cItem = menu.children.find(item => item.key === this.path);\n\n          if (cItem) {\n            console.log(\"cItem\", cItem);\n            this.openKey = menu.key;\n          }\n\n          return /*#__PURE__*/_jsxDEV(SubMenu, {\n            icon: menu.icon,\n            title: menu.title,\n            children: this.generateMenuList(menu.children)\n          }, menu.key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this);\n        }\n      });\n    };\n  }\n\n  render() {\n    const path = this.props.location.pathname;\n    const menuNodes = this.generateMenuList(menuList);\n    const openKey = this.openKey;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-nav\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/dashboard\",\n        className: \"left-nav-header\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 200\n        },\n        children: /*#__PURE__*/_jsxDEV(Menu, {\n          selectedKeys: [path],\n          defaultOpenKeys: [openKey],\n          mode: \"inline\",\n          theme: \"light\",\n          inlineCollapsed: this.state.collapsed,\n          children: menuNodes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(state => ({}), {})(withRouter(LeftNav));","map":{"version":3,"sources":["C:/Users/TaoHu/Desktop/前端/workspace/react-admin-client/src/containers/LeftNav/LeftNav.jsx"],"names":["React","Component","connect","Logo","Link","Menu","menuList","withRouter","SubMenu","LeftNav","state","collapsed","toggleCollapsed","setState","generateMenuList","map","menu","children","icon","key","title","console","log","path","cItem","find","item","openKey","render","props","location","pathname","menuNodes","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport './LeftNav.less'\r\nimport Logo from '../../assets/images/logo.png'\r\nimport { Link } from 'react-router-dom'\r\nimport { Menu } from 'antd';\r\nimport menuList from '../../config/menuListConfig'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass LeftNav extends Component {\r\n\r\n    state = {\r\n        collapsed: false,\r\n    };\r\n\r\n    toggleCollapsed = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed,\r\n        });\r\n    };\r\n\r\n    generateMenuList = (menuList) => {\r\n        return menuList.map(menu => {\r\n            if (!menu.children) {\r\n                return (\r\n                    <Menu.Item key={menu.key} icon={menu.icon}>\r\n                        <Link to={menu.key}>{menu.title}</Link>\r\n                    </Menu.Item>\r\n                )\r\n            } else {\r\n                //check if current item should be open\r\n                console.log('this.path',path)\r\n                const cItem = menu.children.find(item => item.key === this.path)\r\n                if(cItem){\r\n                    console.log(\"cItem\",cItem)\r\n                    this.openKey = menu.key\r\n                }\r\n\r\n                return (\r\n                    <SubMenu key={menu.key} icon={menu.icon} title={menu.title}>\r\n                        {\r\n                            this.generateMenuList(menu.children)\r\n                        }\r\n                    </SubMenu>\r\n                )\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    render() {\r\n        const path = this.props.location.pathname\r\n        const menuNodes = this.generateMenuList(menuList)\r\n        const openKey = this.openKey\r\n\r\n        return (\r\n            <div className='left-nav'>\r\n                <Link to=\"/dashboard\" className='left-nav-header'>\r\n                    <img src={Logo} alt=\"logo\"></img>\r\n                </Link>\r\n                <div style={{ width: 200 }}>\r\n                    <Menu\r\n                        selectedKeys={[path]}\r\n                        defaultOpenKeys={[openKey]}\r\n                        mode=\"inline\"\r\n                        theme=\"light\"\r\n                        inlineCollapsed={this.state.collapsed}\r\n                    >\r\n                        {\r\n                            menuNodes\r\n                        }\r\n                    </Menu>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({}),\r\n    {}\r\n)(withRouter(LeftNav))\r\n"]},"metadata":{},"sourceType":"module"}